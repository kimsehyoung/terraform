replicaCount: ${replicas}

image:
  repository: ${image_repository}

serviceAccount:
  create: ${sa_create}
  namespace: ${sa_namespace}
  name: ${sa_name}
  annotations:
    eks.amazonaws.com/role-arn: ${sa_role_arn}

clusterName: ${cluster_name}

affinity:
  nodeAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      nodeSelectorTerms:
      - matchExpressions:
        - key: karpenter.sh/nodepool
          operator: DoesNotExist
      - matchExpressions:
        - key: eks.amazonaws.com/nodegroup
          operator: In
          values:
          - ${node_group_name}

tolerations:
  - key: karpenter
    operator: Exists

topologySpreadConstraints:
  - maxSkew: 1
    topologyKey: topology.kubernetes.io/zone
    whenUnsatisfiable: ScheduleAnyway